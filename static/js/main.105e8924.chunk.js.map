{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","body","email","name","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"018IAAaA,EAAc,SAAC,GAAD,QACzBC,QACEC,EAFuB,EAEvBA,KACAC,EAHuB,EAGvBA,MACAC,EAJuB,EAIvBA,KAJuB,OAOzB,qBAAIC,UAAU,cAAd,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGD,IAGF,OAED,mBACEC,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGH,QCpBMK,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,oBAAIH,UAAU,cAAd,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAEEA,QAASA,GADJA,EAAQS,UCNRC,G,MAAW,SAAC,GAAD,QACtBC,KACET,EAFoB,EAEpBA,MACAC,EAHoB,EAGpBA,KAHoB,OAMtB,8BACG,eAED,mBACEC,UAAU,WACVC,KAAI,iBAAYH,GAFlB,SAIGC,SCVMS,EAAW,SAAC,GAAD,QACtBC,KACEZ,EAFoB,EAEpBA,KACAM,EAHoB,EAGpBA,SACAO,EAJoB,EAIpBA,MACAH,EALoB,EAKpBA,KALoB,OAQtB,qBAAIP,UAAU,WAAd,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,IAGFH,GACC,cAAC,EAAD,CAAUA,KAAMA,OAIpB,mBAAGP,UAAU,iBAAb,SACGH,IAGH,uBAECM,EAASQ,OACR,cAAC,EAAD,CAAaR,SAAUA,IAEvB,mBAAG,UAAQ,oBAAX,iCC/BOS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,oBAAIb,UAAU,WAAd,SACGa,EAAMT,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKJ,UCWX,IAAMQ,EAAQC,EAAgBV,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CF,MAZmBQ,EAYDN,EAAKM,OAXhBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MAC3C,MAWLZ,UARsBE,EAQGI,EAAKJ,GAPvBa,EAAmBC,QAAO,SAAAvB,GAAO,OAAIA,EAAQwB,SAAWf,MAC1D,QAFP,IAAwBA,EALHU,KAgBRM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUa,MAAOA,QCvBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.105e8924.chunk.js","sourcesContent":["export const CommentInfo = ({\n  comment: {\n    body,\n    email,\n    name,\n  },\n}) => (\n  <li className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </li>\n);\n","import './CommentList.scss';\n\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <ul className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo\n        key={comment.id}\n        comment={comment}\n      />\n    ))}\n  </ul>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({\n  user: {\n    email,\n    name,\n  },\n}) => (\n  <p>\n    {' Posted by  '}\n\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  </p>\n);\n","import './PostInfo.scss';\n\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({\n  post: {\n    body,\n    comments,\n    title,\n    user,\n  },\n}) => (\n  <li className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {title}\n      </h3>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    <hr />\n\n    {comments.length ? (\n      <CommentList comments={comments} />\n    ) : (\n      <b data-cy=\"NoCommentsMessage\">\n        No comments yet\n      </b>\n    )}\n  </li>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <ul className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo\n        key={post.id}\n        post={post}\n      />\n    ))}\n  </ul>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getCommentById(id) {\n  return commentsFromServer.filter(comment => comment.postId === id)\n    || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}